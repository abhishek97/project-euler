(define (mod x y)
  (cond ((> x y) (mod (- x y) y))
        ((= x y) 0)
        (else x)))
(define (multiple-of? a b)
  (= 0 (mod b a)))
(define (fizbuz i)
  (or (multiple-of? 3 i) (multiple-of? 5 i)))
(define (sum-iter sum i stop)
  (cond ((= i stop) sum)
        ((fizbuz i) (sum-iter (+ sum i) (+ 1 i) stop))
        (else (sum-iter sum (+ 1 i) stop))))
(sum-iter 0 1 1000)
